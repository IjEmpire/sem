install.packages("ggplot2")
install.packages("lattice")
install.packages("caret")
install.packages("randomForest")
library(ggplot2)
library(lattice)
library(caret)
library(randomForest)
install.packages("cowplot")
url <- "http://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/processed.cleveland.data"
data <- read.csv(url, header=FALSE)
colnames(data) <- c(
"age",
"sex",# 0 = female, 1 = male
"cp", # chest pain
# 1 = typical angina,
# 2 = atypical angina,
# 3 = non-anginal pain,
# 4 = asymptomatic
"trestbps", # resting blood pressure (in mm Hg)
"chol", # serum cholestoral in mg/dl
"fbs",  # fasting blood sugar if less than 120 mg/dl, 1 = TRUE, 0 = FALSE
"restecg", # resting electrocardiographic results
# 1 = normal
# 2 = having ST-T wave abnormality
# 3 = showing probable or definite left ventricular hypertrophy
"thalach", # maximum heart rate achieved
"exang",   # exercise induced angina, 1 = yes, 0 = no
"oldpeak", # ST depression induced by exercise relative to rest
"slope", # the slope of the peak exercise ST segment
# 1 = upsloping
# 2 = flat
# 3 = downsloping
"ca", # number of major vessels (0-3) colored by fluoroscopy
"thal", # this is short of thalium heart scan
# 3 = normal (no cold spots)
# 6 = fixed defect (cold spots during rest and exercise)
# 7 = reversible defect (when cold spots only appear during exercise)
"hd" # (the predicted attribute) - diagnosis of heart disease
# 0 if less than or equal to 50% diameter narrowing
# 1 if greater than 50% diameter narrowing
)
head(data)
data[data == "?"] <- NA
data[data$sex == 0,]$sex <- "F"
data[data$sex == 1,]$sex <- "M"
data$sex <- as.factor(data$sex)
data$cp <- as.factor(data$cp)
data$fbs <- as.factor(data$fbs)
data$restecg <- as.factor(data$restecg)
data$exang <- as.factor(data$exang)
data$slope <- as.factor(data$slope)
data$ca <- as.integer(data$ca)
data$ca <- as.factor(data$ca)
data$thal <- as.integer(data$thal)
data$thal <- as.factor(data$thal)
data$hd <- ifelse(test=data$hd == 0, yes="Healthy", no="Unhealthy")
data$hd <- as.factor(data$hd)
str(data)
set.seed(42)
data.imputed <- rfImpute(data$hd ~ ., data = data, iter=6)
model <- randomForest(data$hd ~ ., data=data.imputed, proximity=TRUE)
model <- randomForest(hd ~ ., data=data.imputed, proximity=TRUE)
model <- randomForest(data$hd ~ ., data = data.imputed, proximity=TRUE)
names(data)
model <- randomForest(hd ~ ., data = data.imputed, proximity = TRUE)''
model <- randomForest(hd ~ ., data = data.imputed, proximity = TRUE)
model <- randomForest(data$hd ~ ., data = data.imputed, proximity = TRUE)
model
model <- randomForest(hd ~ ., data=data.imputed, proximity=TRUE)
data.imputed <- rfImpute(data$hd ~ ., data = data, iter=6)
model <- randomForest(data.imputed)
model
model <- randomForest(data = data.imputed, proximity = TRUE)
model <- randomForest(data.imputed ~ ., data = data.imputed, proximity = TRUE)
model
oob.error.data <- data.frame(
Trees=rep(1:nrow(model$err.rate), times=3),
Type=rep(c("OOB", "Healthy", "Unhealthy"), each=nrow(model$err.rate)),
Error=c(model$err.rate[,"OOB"],
model$err.rate[,"Healthy"],
model$err.rate[,"Unhealthy"]))
oob.error.data <- data.frame(
Trees=rep(1:nrow(model$err.rate), times=3),
Type=rep(c("OOB", "Healthy", "Unhealthy"), each=nrow(model$err.rate)),
Error=c(model$err.rate[,"OOB"],
model$err.rate[,"Healthy"],
model$err.rate[,"Unhealthy"]))
model <- randomForest(data$hd ~ ., data = data.imputed, proximity = TRUE)
model
model <- randomForest(data$hd ~ data=data.imputed, ntree=1000, proximity=TRUE)
model <- randomForest(data$hd ~ ., data=data.imputed, ntree=1000, proximity=TRUE)
model <- randomForest(hd ~ ., data=data.imputed, ntree=1000, proximity=TRUE)
model <- randomForest(data$hd ~ ., data = data.imputed)
objects(data)
object.size("hd")
object.size("slope")
object.size(data)
randomForest(formula = hd ~ ., data = data.imputed, proximity = TRUE)
randomForest(formula = data$hd ~ ., data = data.imputed, proximity = TRUE)
model <- randomForest("hd" ~ ., data = data.imputed, proximity = TRUE)
# i keep getting an error in inputing a formula for my model
however, so far, our model function when called reveals the following
model
#that 500 trees were created by our model
#next we also see that our random forest model was designed for classification.
#note the default value of number of trees is 500.
#our out-of-bag error estimates are not shown.
#also our confusion matrix isn't displayed.
#this is important to show the result of our test using our model.
data.imputed <- rfImpute(data$hd ~ ., data = data, iter=6)
data.imputed <- rfImpute(data$hd ~ ., data = data, iter=20)
data.imputed <- rfImpute(data$hd ~ ., data = data, iter=5)
randomForest(data.imputed$`data$hd` ~ ., data = data.imputed, proximity=TRUE)
#now our error is resolved
#our code doesn't appear so clean but since it works, we'll leave it!
model <- randomForest(data.imputed$`data$hd` ~ ., data = data.imputed, proximity=TRUE)
model
oob.error.data <- data.frame(
Trees=rep(1:nrow(model$err.rate), times=3),
Type=rep(c("OOB", "Healthy", "Unhealthy"), each=nrow(model$err.rate)),
Error=c(model$err.rate[,"OOB"],
model$err.rate[,"Healthy"],
model$err.rate[,"Unhealthy"]))
ggplot(data=oob.error.data, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))
model <- randomForest(data.imputed$`data$hd` ~ ., data = data.imputed, ntree = 1000, proximity=TRUE)
model
oob.error.data <- data.frame(
Trees=rep(1:nrow(model$err.rate), times=3),
Type=rep(c("OOB", "Healthy", "Unhealthy"), each=nrow(model$err.rate)),
Error=c(model$err.rate[,"OOB"],
model$err.rate[,"Healthy"],
model$err.rate[,"Unhealthy"]))
#we run a new ggplot using ntree set to the value 1000 in contrary to the initial value of 500
ggplot(data=oob.error.data, aes(x=Trees, y=Error)) +
geom_line(aes(color=Type))
#lets test the robustness of our model
adding more trees didn't really make a difference observing our ggplots.'
oob.values <- vector(length=10)
for(i in 1:10) {
temp.model <- randomForest(hd ~ ., data=data.imputed, mtry=i, ntree=1000)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
for(i in 1:10) {
temp.model <- randomForest(data.imputed$`data$hd` ~ ., data=data.imputed, mtry=i, ntree=1000)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
}
obb.values
oob.values <- vector(length=10)
for(i in 1:10) {
temp.model <- randomForest(hd ~ ., data=data.imputed, mtry=i, ntree=1000)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1]
for(i in 1:10) {
temp.model <- randomForest(hd ~ ., data=data.imputed, mtry=i, ntree=1000)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1}
for(i in 1:10) {
temp.model <- randomForest(data.imputed$`data$hd` ~ ., data=data.imputed, mtry=i, ntree=1000)
oob.values[i] <- temp.model$err.rate[nrow(temp.model$err.rate),1}
source("~/randomForest/randomForest.Rproj")
save.image("C:/Users/bf201/OneDrive/Documents/randomForest/ranFor.RData")
load("~/randomForest/.RData")
load("~/randomForest/ranFor.RData")
